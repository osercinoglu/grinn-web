# Backend Dockerfile for gRINN Web Service

FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Install system dependencies including Docker CLI
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    docker.io \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY config/requirements/base.txt /app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy shared modules
COPY shared/ /app/shared/

# Copy backend application
COPY backend/ /app/backend/

# Set Python path
ENV PYTHONPATH="/app:${PYTHONPATH}"

# Create non-root user (but add to docker group for Docker access)
RUN useradd -m -u 1000 appuser \
    && usermod -a -G docker appuser \
    && chown -R appuser:appuser /app

# Create log directory
RUN mkdir -p /app/logs && chown appuser:appuser /app/logs

USER appuser

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Default command (can be overridden for worker vs API)
CMD ["python", "/app/backend/api.py"]