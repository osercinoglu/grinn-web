# Worker Environment Configuration
# ===============================
# Configuration for gRINN Web Service Remote Workers
# These workers connect to a remote frontend server

# Frontend Server Connection
# Replace with your actual frontend server IP/hostname
FRONTEND_HOST=your.frontend.server.ip
FRONTEND_BACKEND_PORT=5000
FRONTEND_POSTGRES_PORT=5432
FRONTEND_REDIS_PORT=6379

# Worker Identification
FACILITY_NAME=facility-1
WORKER_COUNT=2

# Database Connection (to remote frontend)
POSTGRES_USER=grinn_user
POSTGRES_PASSWORD=grinn_secure_password_2024
POSTGRES_DB=grinn_web
DATABASE_URL=postgresql://grinn_user:grinn_secure_password_2024@your.frontend.server.ip:5432/grinn_web

# For local development with SQLite
# DATABASE_URL=sqlite:////tmp/grinn_dev.db

# Redis Connection (to remote frontend)
REDIS_PASSWORD=redis_secure_password_2024
CELERY_BROKER_URL=redis://:redis_secure_password_2024@your.frontend.server.ip:6379/0
CELERY_RESULT_BACKEND=redis://:redis_secure_password_2024@your.frontend.server.ip:6379/0

# gRINN Configuration
GRINN_DOCKER_IMAGE=grinn:latest
DOCKER_TIMEOUT=7200

# Storage Configuration
# Should match frontend configuration
GCS_BUCKET_NAME=your-grinn-bucket
GCS_PROJECT_ID=your-gcp-project-id
GCS_CREDENTIALS_PATH=/app/secrets/gcs-credentials.json

# Worker Resource Limits
WORKER_MEMORY_LIMIT=4G
WORKER_CPU_LIMIT=2

# Development Settings (use only for testing)
DEVELOPMENT_MODE=false

# Logging
LOG_LEVEL=INFO

# Docker Configuration
DOCKER_SOCKET=/var/run/docker.sock